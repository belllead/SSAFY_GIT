1. 추상 클래스와 인터페이스의 공통점과 차이점을 서술하시오




2. 다음 코드의 변수 중 옳게 짝지어진 것을 고르시오
public class Person {
	public static String species = "호모 사피엔스 사피엔스 사피엔스";
	private String name;
	int age;
	protected void eat() {
		String dish = "짜장면";
	}
}

1) species - 지역 변수 / name - 클래스 변수 / dish - 인스턴스 변수
2) species - 인스턴스 변수 / name - 클래스 변수 / dish - 지역변수
3) species - 인스턴스 변수 / name - 클래스 변수 / dish - 매개변수
4) species - 클래스 변수 / name - 인스턴스 변수 / dish - 지역변수
5) species - 클래스 변수 / name - 인스턴스 변수 / dish - 매개변수



3. 객체지향 프로그래밍의 특징 4가지를 서술하시오





 ---------------------------------------------------------------------------




1번 정답
// 공통점 : 객체 생성이 불가능하다, 특정 기능의 구현을 강제하고 싶을 때 사용한다
// 차이점 : 추상 클래스는 abstract 키워드를 붙여야 추상 메서드인 반면(나머지는 일반 메서드), 인터페이스의 모든 메서드는 추상 메서드이다(abstract 자동컴파일)
	추상 클래스에서는 일반적인 멤벼변수를 선언할 수 있지만 인터페이스에서는 상수만 가능하다
	인터페이스는 다중 상속이 가능하지만, 추상클래스는 다중 상속이 불가능하다

2번 정답 : 4
// species : 클래스 변수
// name : 인스턴스 변수
// age : 인스턴스 변수
// dish : 지역변수
클래스 변수는 클래스 영역 내에서 선언된 변수 중 static 키워드를 가지고 있음
인스턴스 변수는 클래스 영역 내에서 선언된 변수 중 static 키워드가 없음
지역 변수는 클래스 영역 이외의 영역에서 선언(메서드, 생성자 등)

3번 정답 : A PIE(추상화, 다형성, 상속, 캡슐화)